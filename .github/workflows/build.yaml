name: .NET

on: [push]

permissions:
  contents: read

jobs:
  build:
    runs-on: [self-hosted, windows, x64]
    #runs-on: windows-latest
    steps:

    #-----------------------------------------------------------------------
    # Checkout

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    #   lfs: true
    #- name: Checkout LFS objects
    #  run: git lfs checkout

    - name: Extract branch name
      id: extract_branch_name
    #  if: startsWith( github.ref, 'refs/tags/' )
      run: |
        $branch_name=$(git name-rev --name-only --exclude=tags/* HEAD)
        echo "Detected current branch: ${branch_name}"
        echo "::set-output name=branch_name::${branch_name}"

    #-----------------------------------------------------------------------
    # Setup environments

    - name: Setup .NET 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.*
    - name: Setup .NET 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.*
    - name: Setup .NET 6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.*

    #- name: Setup .NET 6 Maui workloads
    #  run: dotnet workload install maui 

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.3

    - name: Setup NuGet package reference
      run: |
        dotnet nuget add source ${{secrets.GH_LOCAL_NUGET_URL}} -n ref1 -u ${{secrets.GH_LOCAL_NUGET_USER}} -p ${{secrets.GH_LOCAL_NUGET_PASSWORD}} --store-password-in-clear-text --configfile nuget.config
#        dotnet nuget add source ${{secrets.GH_NUGET_URL}} -n ref2 -u ${{secrets.GH_NUGET_USER}} -p ${{secrets.GH_NUGET_PASSWORD}} --store-password-in-clear-text --configfile nuget.config

    - name: Setup Temurin (OpenJDK 11) for Xamarin Android
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    #-----------------------------------------------------------------------
    # Build

    - name: NuGet restore
      run: msbuild -p:Configuration=Release -maxCpuCount -t:restore SkiaImageView.sln

    - name: Build
      run: |
        msbuild -p:Configuration=Release SkiaImageView.Wpf\SkiaImageView.Wpf.csproj
        msbuild -p:Configuration=Release SkiaImageView.Xamarin.Forms\SkiaImageView.Xamarin.Forms.csproj
        
    # run: msbuild -p:Configuration=Release -maxCpuCount SkiaImageView.sln

    - name: Build NuGet packages
      run: |
        msbuild -t:pack -p:Configuration=Release -p:PackageOutputPath=..\..\artifacts SkiaImageView.Wpf\SkiaImageView.Wpf.csproj
        msbuild -t:pack -p:Configuration=Release -p:PackageOutputPath=..\..\artifacts SkiaImageView.Xamarin.Forms\SkiaImageView.Xamarin.Forms.csproj

    #-----------------------------------------------------------------------
    # Test

    #- name: Test
    #  run: dotnet test --no-restore --verbosity normal -p:CITest=True SkiaImageView.sln
    #  timeout-minutes: 10

    #-----------------------------------------------------------------------
    # Deploy packages (develop)

    - name: Deploy NuGet package (develop/ref1)
      if: startsWith( github.ref, 'refs/tags/' )
      run: |
        dotnet nuget push artifacts\SkiaImageView.Wpf.*.nupkg --source ref1
        dotnet nuget push artifacts\ESkiaImageView.Xamarin.Forms.*.nupkg --source ref1

    #-----------------------------------------------------------------------
    # Deploy packages (main)

    - name: Deploy NuGet package (main/ref2)
      if: (startsWith( github.ref, 'refs/tags/' )) && (endsWith(steps.extract_branch_name.outputs.branch_name, 'main'))
      run: |
        dotnet nuget push artifacts\SkiaImageView.Wpf.*.nupkg --source ref2 --api-key ${{secrets.GH_NUGET_APIKEY}}
        dotnet nuget push artifacts\SkiaImageView.Xamarin.Forms.*.nupkg --source ref2 --api-key ${{secrets.GH_NUGET_APIKEY}}
